rx.log.L30という実測データ30行を繰り返し送信することで30行単位で増減している。
cat rx.log.L30 rx.log.L30 | ./uecsresender
として送信している。すべて同じ欠損データ

2024/01/18 Ver2.4.aDbg RTC.read()を止めて、1secのtimer1の割り込みで1秒を作った。
           ＝＝＝変わらず。ロスあり。
2024/01/19 Ver2.4.aDbg-01 opeHTTP()を止めた。
           ＝＝＝変わらず。ロスあり。 42/60
2024/01/19 Ver2.4.aDbg-02 UECSupdate16520port() を追加して複数回読み込む。
           ＝＝＝変わらず。ロスあり。 42/60
2024/01/19 Ver2.4.aDbg-03 UECSupdate16529port()とSW-SAFE判定を外してみた。
           ＝＝＝変わらず。ロスあり。 42/60
2024/01/19 Ver2.4.aDbg-04 recv16520.ino内のmatch_rro()を通過しないようにした。
           ＝＝＝変わらず。ロスあり。 42/60
2024/01/19 Ver2.4.aDbg-05 recv16520.ino内の24行目ptr_uecsxmldata->ip = UDP16520.remoteIP();を通過しないようにした。
           ＝＝＝変わらず。ロスあり。 42/60
2024/01/19 Ver2.4.aDbg-06 recv16520.ino内の11行目パケットサイズの制限を外した。
           ＝＝＝変わらず。ロスあり。 42/60
2024/01/19 Ver2.4.aDbg-07 recv16520.ino内の30行目を変更して秒数を併記することにした。データを120レコードいれた。
           ＝＝＝42レコード変わらず。ロスあり。 43/120
2024/01/29 Ver2.4.aDbg-08 recv16520.ino内でxmldecode()を通過しないようにした。
           ＝＝＝変わらず。ロスあり。 42/60
2024/01/31 Ver2.4.aDbg-09 main.ino内でlcdd(LCD出力)をバイパスした。
           ＝＝＝変わらず。ロスあり。 42/60
2024/02/01 Ver2.4.aDbg-10 入力データに問題があることが判明。時刻情報の重複を削除し繰り返す。
2024/02/07 Ver2.4.aDbg-11 uecsresenderに送信後10mSecのdelayを設ける。これで一旦の解決を見る。
2024/02/09 develにmergeしてバージョンは 2.5.0D に変更。

時刻表示が大幅に遅れる
2024/02/22 Ver2.5.1D 1時間に一度RTC.get()で時刻を合わせる。
2024/02/23 Ver2.5.1Dbg01  timer1割り込みの試験を行う
2024/02/24 Ver2.5.1Dbg02  timer1をNormal modeで使用してprescaler 256でTCNT1=3036で1secを作る
2024/02/24 Ver2.5.1Dbg03  period10secなどを表示してmillis()との差を確認する。1時間毎のRTC.get()の反映具合を確認。
2024/02/24 Ver2.5.1Dbg04  TCNT1を3036から3473に変更して1秒毎7msecの遅れを吸収する。
