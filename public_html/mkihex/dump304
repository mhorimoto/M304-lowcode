#! /usr/bin/env php

<?php

if (!empty($argv[1])) {
    $opts = getopt("d:u",[],$ri);
    $url=@$argv[$ri];
    $optd = $opts['d'];
    $ausm = @$opts['u'];
    $uasm = isset($ausm);

    switch ($optd) {
    case 'rx':
        $addr = "L00100000";
        $lcnt = 8;
        break;
    case 'tx':
        $addr = "L00300000";
        $lcnt = 3;
        break;
    case 'ope':
        $addr = "L00500000";
        $lcnt = 2;
        break;
    case 'info':
        $addr = "L00000000";
        $lcnt = 1;
        break;
    }
    $ver = getVersion($url);
    $url = sprintf("http://%s/%s",$url,$addr);
    $f = "";
    for ($lc=0;$lc<$lcnt;$lc++) {
        $f = fopen($url,"r");
    }
    if ($f) {
        if ($uasm==1) {
            switch($optd) {
            case 'info':
                display_info($f,$ver);
                break;
            case 'rx':
                display_rx($f,$ver);
                break;
            case 'ope':
                display_ope($f,$ver);
                break;
            }
        } else {
            normal_dump($f);
        }
        fclose($f);
    }
} else {
    echo "You need argument.";
}


////////////////////////////////////////////////////////////////////

function display_info($fp,$ver) {
    for($y=0;$y<8;$y++) {
        $buffer = fgets($fp,80);
        for($x=0;$x<16;$x++) {
            $z = 0xff & hexdec(substr($buffer,(3*$x+8),3));
            $hexdata[$y*0x10+$x] = $z;
        }
    }
    printf("     UECS-ID: %s\n",prt_LC_INFO($hexdata,"uecsid"));
    printf("     VERSION: %s\n",$ver);
    printf(" MAC ADDRESS: %s\n",prt_LC_INFO($hexdata,"mac"));
    printf("   IP ASSIGN: %s\n",prt_LC_INFO($hexdata,"dhcpf"));
    printf("    FIXED IP: %s\n",prt_LC_INFO($hexdata,"ipaddress"));
    printf("     NETMASK: %s\n",prt_LC_INFO($hexdata,"netmask"));
    printf("     GATEWAY: %s\n",prt_LC_INFO($hexdata,"defgw"));
    printf("         DNS: %s\n",prt_LC_INFO($hexdata,"dns"));
    printf("      VENDER: %s\n",prt_LC_INFO($hexdata,"vender"));
    printf("   NODE NAME: %s\n",prt_LC_INFO($hexdata,"nodename"));
    printf("   DEBUG MSG: %s\n",prt_LC_INFO($hexdata,"dbgmsg"));
}

function display_rx($fp,$ver) {
    for($y=0;$y<30;$y++) {  // CCM_TBL_CNT_RX
        for($w=0;$w<4;$w++) {  // 4records per an entry
            $buffer = fgets($fp,80);
            for($x=0;$x<16;$x++) {
                $z = 0xff & hexdec(substr($buffer,(3*$x+8),3));
                $hexdata[$w*0x10+$x] = $z;
                printf("%02X ",$z);
            }
            printf("\n");
        }
        printf("%02d:%s,%3d,%3d,%3d,%2d\n",$y,prt_LC_RTX($hexdata,"valid"),prt_LC_RTX($hexdata,"room"),
               prt_LC_RTX($hexdata,"region"),prt_LC_RTX($hexdata,"order"),prt_LC_RTX($hexdata,"priority"));

    }
}

function display_tx($fp,$ver) {
}

function display_ope($fp,$ver) {
    for($y=0;$y<10;$y++) {
        for($w=0;$w<2;$w++) {
            $buffer = fgets($fp,80);
            for($x=0;$x<16;$x++) {
                $z = 0xff & hexdec(substr($buffer,(3*$x+8),3));
                $hexdata[$w*0x10+$x] = $z;
                printf("%02X ",$z);
            }
            printf("\n");
        }
        printf("%02d:%s,%3d,%3d,%3d,%2d,%s%s\n",$y,prt_LC_RTX($hexdata,"valid"),prt_LC_RTX($hexdata,"room"),
               prt_LC_RTX($hexdata,"region"),prt_LC_RTX($hexdata,"order"),prt_LC_RTX($hexdata,"lifecnt"),
               prt_LC_RTX($hexdata,"ccmtype"),prt_LC_RTX($hexdata,"ope"));
    }
}

//
// Subroutines
//

function getVersion($url) {
    $vul = sprintf("http://%s/L007F0000",$url);
    $f = fopen($vul,"r");
    if ($f) {
        for ($y=0;$y<15;$y++) {
            $buffer = fgets($f,80);
        }
        $buffer = fgets($f,80);
        $ver = "";
        for($x=0;$x<16;$x++) {
            $z = chr(0xff & hexdec(substr($buffer,(3*$x+8),3)));
            $ver .= $z;
        }
    }
    return($ver);
}

function normal_dump($fp) {
    while (($buffer = fgets($fp, 4096)) !== false) {
        if (substr($buffer,6,1)==':') {
            echo rtrim($buffer);
            echo "  ";
            for ($x=8;$x<54;$x+=3) {
                $y = hexdec(substr($buffer,$x,3));
                if (($y<0x20)||($y>0x7f)) {
                    echo ".";
                } else {
                    echo chr($y);
                }
            }                    
            echo "\n";
        } else {
            echo $buffer;
        }
    }
    if (!feof($fp)) {
        echo "Error: unexpected fgets() fail\n";
    }
}

function prt_LC_INFO($dt,$k) {
    switch($k) {
    case "uecsid":
        $odt = sprintf("%02X%02X%02X%02X%02X%02X",
                       $dt[0],$dt[1],$dt[2],$dt[3],$dt[4],$dt[5]);
        break;
    case "mac":
        $odt = sprintf("%02X:%02X:%02X:%02X:%02X:%02X",
                       $dt[6],$dt[7],$dt[8],$dt[9],$dt[10],$dt[11]);
        break;
    case "dhcpf":
        if ($dt[0x0c]==00) {
            $odt = "STATIC";
        } else {
            $odt = "DHCP";
        }
        break;
    case "ipaddress":
        $odt = _IPaddress($dt,0x10);
        break;
    case "netmask":
        $odt = _IPaddress($dt,0x14);
        break;
    case "defgw":
        $odt = _IPaddress($dt,0x18);
        break;
    case "dns":
        $odt = _IPaddress($dt,0x1c);
        break;
    case "vender":
        $odt = _LCText($dt,0x40,16);
        break;
    case "nodename":
        $odt = _LCText($dt,0x50,16);
        break;
    case "dbgmsg":
        $odt = _LCBitSW($dt,0x60);
        break;
    }
    return $odt;
}

function prt_LC_RTX($dt,$k) {
    switch($k) {
    case "valid":
        if (($dt[0]&0xff)==1) {
            return("E");
        } else {
            return("N");
        }
        break;
    case "room":
        return($dt[1]&0xff);
        break;
    case "region":
        return((string)($dt[2]&0xff));
        break;
    case "order":
        $z = ($dt[4]&0xff)*0x100+($dt[3]&0xff);
        return((string)$z);
    case "lifecnt":
    case "priority":
        return((string)($dt[5]&0xff));
    case "ccmtype":
        return(_LCText($dt,6,20));
    case "ope":
        switch($dt[0x1a]&0x7f) {
        case 0x00:
        case 0x7f:
            return(" ");
        case 0x01:
            return("==");
        case 0x02:
            return(">");
        case 0x03:
            return("<");
        case 0x04:
            return(">=");
        case 0x05:
            return("<=");
        case 0x06:
            return("&&");
        case 0x07:
            return("||");
        case 0x08:
            return("!=");
        default:
            return("??");
        }
    }
}
    
function _LCBitSW($dt,$ofs) {
    $d = $dt[$ofs];
    $odt = substr("00000000".decbin($d),-0,8);
    return($odt);
}

function _LCText($dt,$ofs,$len) {
    $rt = "";
    for($x=0;$x<$len;$x++) {
        if (($dt[$ofs+$x]<0x20)||($dt[$ofs+$x]>0x7f)) {
            $rt .= NULL;
            break;
        } else {
            $rt .= chr($dt[$ofs+$x]);
        }
    }
    return($rt);
}

function _IPaddress($dt,$ofs) {
    if ($dt[0x0c]!=00) {
        $ign = "(ignore)";
    } else {
        $ign = "";
    }
    $odt = sprintf("%d.%d.%d.%d %s",$dt[$ofs],$dt[$ofs+1],$dt[$ofs+2],$dt[$ofs+3],$ign);
    return($odt);
}


# -*- mode: php-mode; -*-
?>

